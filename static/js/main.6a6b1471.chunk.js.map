{"version":3,"sources":["services/utilService.js","services/folderService.js","cmps/FolderPreview.jsx","actions/folderAction.js","cmps/FolderList.jsx","cmps/TaskStats.jsx","cmps/AddFolder.jsx","views/Homepage.jsx","services/todoService.js","actions/todosAction.js","cmps/TaskFilter.jsx","cmps/TodoPreview.jsx","cmps/TodosList.jsx","views/Todos.jsx","cmps/Form.jsx","views/TodoEdit.jsx","App.js","serviceWorker.js","reducers/todosReducer.js","reducers/folderReducer.js","store.js","cmps/ScrollToTop.jsx","index.js"],"names":["loadFromLocal","key","str","localStorage","getItem","JSON","parse","saveToLocal","value","stringify","setItem","generateId","length","txt","possible","i","charAt","Math","floor","random","saveToSession","sessionStorage","loadFromSession","redirectPage","this","props","history","push","gFolders","a","folders","utilService","_id","name","folder","id","idx","findIndex","splice","find","_createFolders","addFolder","removeFolder","query","getFolderById","FolderPreview","handleFolderClick","setCurrFolder","todos","folderTodos","filter","todo","belongTo","toLowerCase","className","onClick","icon","faCircle","Component","maspDispatchToProps","folderId","dispatch","folderService","type","withRouter","connect","state","FolderList","elFolders","map","TaskStas","completeTodos","AddFolder","handleInputChange","ev","persist","target","setState","prevState","isFolderExist","existFolder","toLocaleLowerCase","console","log","onChange","placeholder","mapDispatchToProps","addedFolder","HomePage","isAddFolderSectionOpen","changeSection","Date","toDateString","split","day","shortMonth","numericDay","year","month","monthName","startsWith","isDone","elSection","elIconType","faMinus","faPlus","faBars","gTodos","task","isPriority","lastDay","getTime","updatedTodo","_createTodos","getTodoById","removeTodo","addTodo","updateTodo","todoService","TaskFilter","setFilter","changeFilter","elFilters","filterBy","TodoPreview","isTodoTabOpen","handleTodoClick","stopPropagation","editTodo","changeTodo","property","newTodo","Object","assign","elMark","faCheckCircle","faCircleNotch","open","priority","elTodo","faCalendarDay","faMagic","faStar","faEdit","faTrashAlt","TodosList","filterTodos","today","todayMonth","todayDay","todayYear","elTodoList","currFolder","Todos","elCurr","faArrowLeft","goBack","to","Form","field","val","handleInputChangeLastDay","date","sendForm","useStyles","makeStyles","theme","root","width","classes","elBtn","TextField","label","utils","DateFnsUtils","Grid","container","justify","margin","format","KeyboardButtonProps","htmlFor","checked","TodoEdit","match","params","elSpanTitle","App","loadFolders","loadTodos","exact","path","component","Homepage","Boolean","window","location","hostname","INITIAL_STATE","localCurrFolder","rootReducer","combineReducers","action","slice","removeIdx","removeTodos","res","store","createStore","applyMiddleware","thunk","children","pathname","useEffect","scrollTo","top","left","behavior","createBrowserHistory","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6a6b1471.chunk.js","sourcesContent":["\r\n// const sticky = (function () {\r\n//     window.addEventListener('scroll', () => {\r\n//       var elNav = document.querySelector('.header');\r\n//       elNav.classList.toggle('sticky', window.scrollY > 0);\r\n//     })\r\n//   })()\r\n  \r\n  function saveToLocal(key, value) {\r\n    var str = JSON.stringify(value);\r\n    localStorage.setItem(key, str)\r\n  }\r\n  \r\n  function loadFromLocal(key) {\r\n    var str = localStorage.getItem(key);\r\n    var value = JSON.parse(str);\r\n    return value;\r\n  }\r\n  \r\n  \r\n  function saveToSession(key, value) {\r\n    var str = JSON.stringify(value);\r\n    sessionStorage.setItem(key, str)\r\n  }\r\n  \r\n  function loadFromSession(key) {\r\n    var str = sessionStorage.getItem(key);\r\n    var value = JSON.parse(str);\r\n    return value;\r\n  }\r\n  \r\n  function redirectPage() {\r\n    return this.props.history.push('/')\r\n  }\r\n  \r\n  \r\n  function generateId(length = 10) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n      txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n  }\r\n   \r\n  \r\n  export default {\r\n    // sticky,\r\n    loadFromLocal,\r\n    saveToLocal,\r\n    generateId,\r\n    saveToSession,\r\n    loadFromSession,\r\n    redirectPage\r\n  }\r\n  ","import utilService from './utilService'\r\n\r\nvar gFolders = [];\r\n_createFolders();\r\n\r\nasync function _createFolders() {\r\n    var folders = utilService.loadFromSession('folders');\r\n    gFolders = (folders)? folders :  [\r\n        {_id:utilService.generateId(), name:'All Schedule'},\r\n        {_id:utilService.generateId(), name:'Personal Errands'},\r\n        {_id:utilService.generateId(), name:'Work Projects'},\r\n        {_id:utilService.generateId(), name:'Grocery List'},\r\n        {_id:utilService.generateId(), name:'University'},\r\n    ]\r\n\r\n    utilService.saveToSession('folders',gFolders)\r\n}\r\n\r\nasync function query(){\r\n    return gFolders;\r\n}\r\n\r\nasync function addFolder(folder){\r\n    folder.id = utilService.generateId()\r\n    gFolders.push(folder);\r\n    utilService.saveToSession('folders',gFolders)\r\n    return folder;\r\n}\r\n\r\nasync function removeFolder(id){\r\n    var idx = gFolders.findIndex(folder => {\r\n        return folder._id === id\r\n    })\r\n    gFolders.splice(idx,1);\r\n    utilService.saveToSession('folders',gFolders)\r\n    return;\r\n}\r\n\r\nasync function getFolderById(id){\r\n    const folder = gFolders.find((folder) => { return folder._id === id });\r\n    utilService.saveToSession('currFolder',folder)\r\n    return folder;\r\n}\r\n\r\nexport default{\r\n    addFolder,\r\n    removeFolder,\r\n    query,\r\n    getFolderById\r\n}","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrFolder } from '../actions/folderAction'\r\n\r\n\r\nclass FolderPreview extends Component {\r\n    handleFolderClick = async (id) => {\r\n        await this.props.setCurrFolder(id);\r\n        this.props.history.push(`/todos/${id}`)\r\n    }\r\n\r\n    render() {\r\n        const { folder, todos } = this.props;\r\n        var folderTodos = todos.filter((todo) => { return todo.belongTo[0].toLowerCase() === folder.name.toLowerCase() })\r\n        if (folder.name.toLowerCase() === 'all schedule') folderTodos = todos;\r\n\r\n        return (\r\n            <section className=\"folder-container flex row\" onClick={() => { this.handleFolderClick(folder._id) }}>\r\n                <FontAwesomeIcon className=\"homepage-icon\" icon={faCircle}></FontAwesomeIcon>\r\n                <div className=\"flex column\">\r\n                    <h3>{folder.name}</h3>\r\n                    <span>{folderTodos.length} tasks</span>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todo.todos\r\n    }\r\n}\r\n\r\nconst maspDispatchToProps = {\r\n    setCurrFolder\r\n}\r\nexport default withRouter(connect(mapStateToProps,maspDispatchToProps)(FolderPreview))","import folderService from '../services/folderService';\r\n\r\nexport const loadFolders = () => {\r\n    return async (dispatch) => {\r\n        const folders = await folderService.query();\r\n        return dispatch({type:'SET_FOLDERS',folders}) \r\n    }\r\n}\r\n\r\nexport const setCurrFolder = (folderId) => {\r\n    return async (dispatch) => {\r\n        const folder = await folderService.getFolderById(folderId);\r\n        return dispatch({type:'SET_CURR_FOLDER',folder})\r\n    }\r\n}\r\n\r\nexport const addFolder = (folder) => {\r\n    return async (dispatch) => {\r\n        const addedFolder = await folderService.addFolder(folder);\r\n        return dispatch({type:'ADD_FOLDER',addedFolder})\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport FolderPreview from './FolderPreview'\r\n\r\nexport default class FolderList extends Component {\r\n    render() {\r\n        const elFolders = this.props.folders.map((folder) => {\r\n            return (\r\n                    <FolderPreview key={folder._id} folder={folder}></FolderPreview>\r\n            )\r\n        })\r\n        return (<section className=\"homepage-main flex row center space-between wrap\">\r\n            {elFolders}\r\n        </section>)\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default function TaskStas({ completeTodos, todos }) {\r\n    return (\r\n            <div className=\"tasks-stats flex row center space-evenly\">\r\n                <div className=\"flex row center\">\r\n                    <span className=\"count\">\r\n                        {todos.length}\r\n                    </span>\r\n                    <span className=\"count-desc\">\r\n                        Created Tasks\r\n                        </span>\r\n                </div>\r\n                <div className=\"flex row center\">\r\n                    <span className=\"count\">\r\n                        {completeTodos.length}\r\n                    </span>\r\n                    <span className=\"count-desc\">\r\n                        Completed Tasks\r\n                        </span>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { addFolder } from '../actions/folderAction';\r\n\r\n\r\nclass AddFolder extends Component {\r\n    state = {\r\n        folder: {\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    handleInputChange = async (ev) => {\r\n        ev.persist();\r\n        var { value } = ev.target;\r\n        this.setState((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                folder: {\r\n                    ...prevState.folder,\r\n                    name: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    addFolder = async () => {\r\n        var { folder } = this.state;\r\n        var { folders } = this.props;\r\n\r\n        var isFolderExist = folders.find((existFolder) => {\r\n            return existFolder.name.toLowerCase() === folder.name.toLocaleLowerCase();\r\n        })\r\n\r\n        if (folder.name && !isFolderExist) {\r\n            this.props.addFolder(folder);\r\n            console.log('Folder Has Been Adden')\r\n        } else console.log('Cannot Add Folder - Alreay Exist or Undefiend')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"input-folder flex row center\">\r\n                    <input onChange={(ev) => { this.handleInputChange(ev) }} type=\"text\" placeholder=\"Type Folder Name\" />\r\n                    <button onClick={this.addFolder}>Add Folder</button>\r\n                </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        folders: state.folder.folders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addFolder\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFolder)\r\n\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\r\nimport FolderList from '../cmps/FolderList';\r\nimport { connect } from 'react-redux';\r\nimport TaskStats from '../cmps/TaskStats';\r\nimport AddFolder from '../cmps/AddFolder';\r\n\r\nclass HomePage extends Component {\r\n    state = {\r\n        isAddFolderSectionOpen: false\r\n    }\r\n\r\n    changeSection = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                isAddFolderSectionOpen: !prevState.isAddFolderSectionOpen\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { folders, todos } = this.props;\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const date = new Date();\r\n        const [day, shortMonth, numericDay, year] = date.toDateString().split(' ');\r\n        const month = monthNames.find(monthName => { return monthName.startsWith(shortMonth) });\r\n\r\n        const completeTodos = todos.filter((todo) => { return todo.isDone });\r\n\r\n        const elSection = (!this.state.isAddFolderSectionOpen) ?\r\n            (<TaskStats completeTodos={completeTodos} todos={todos} />) :\r\n            (<AddFolder />)\r\n        const elIconType = (!this.state.isAddFolderSectionOpen) ?\r\n            (<FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>) :\r\n            (<FontAwesomeIcon icon={faMinus}></FontAwesomeIcon>)\r\n\r\n\r\n        return (\r\n            <section>\r\n                <div className=\"hero flex column align-start space-between\">\r\n                    <FontAwesomeIcon className=\"bars-icon\" icon={faBars}></FontAwesomeIcon>\r\n                    <h1>Welcome Back</h1>\r\n                    <div className=\"hero-details flex row center space-between\">\r\n                        <div><span className=\"day\">{day}</span>{month} {numericDay} , {year}</div>\r\n                        <div className=\"celsius\">24&deg;C</div>\r\n                    </div>\r\n                </div>\r\n                {elSection}\r\n                <div className=\"homepage-main-wrapper\">\r\n                    <FolderList folders={folders}></FolderList>\r\n                </div>\r\n\r\n                <div className=\"add flex column center\" onClick={this.changeSection}>\r\n                    {elIconType}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        folders: state.folder.folders,\r\n        todos: state.todo.todos\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(HomePage)","import utilService from './utilService';\r\n\r\nvar gTodos = [];\r\n_createTodos();\r\n\r\nasync function _createTodos() {\r\n    var todos = utilService.loadFromSession('todos');\r\n    gTodos = (todos) ? todos : [\r\n        { _id: utilService.generateId(), task: 'Wash Dishes', belongTo: ['personal errands'], isPriority: true, isDone: false, lastDay: (new Date().getTime() + 1000 * 60 * 60 * 24) },\r\n        { _id: utilService.generateId(), task: 'Walk The Dogs', belongTo: ['personal errands'], isPriority: false, isDone: false, lastDay: (new Date().getTime() + 1000 * 60 * 60 * 48) },\r\n        { _id: utilService.generateId(), task: 'Learn React', belongTo: ['work projects'], isPriority: true, isDone: true, lastDay: (new Date().getTime() + 1000 * 60 * 60 * 24 * 7) },\r\n        { _id: utilService.generateId(), task: 'Learn Angular', belongTo: ['work projects'], isPriority: false, isDone: false, lastDay: (new Date().getTime()) },\r\n        { _id: utilService.generateId(), task: 'Learn Vue', belongTo: ['work projects'], isPriority: true, isDone: true, lastDay: (new Date().getTime() + 1000 * 60 * 60 * 24) },\r\n        { _id: utilService.generateId(), task: 'Lean Node', belongTo: ['work projects'], isPriority: true, isDone: true, lastDay: (new Date().getTime()) },\r\n        { _id: utilService.generateId(), task: 'Buy Milk', belongTo: ['grocery list'], isPriority: false, isDone: false, lastDay: (new Date().getTime() + 1000 * 60 * 60 * 48) },\r\n        { _id: utilService.generateId(), task: 'Buy dog Treats', belongTo: ['grocery list'], isPriority: true, isDone: true, lastDay: (new Date().getTime() + 1000 * 60 * 60 * 12) },\r\n        { _id: utilService.generateId(), task: 'Prepare for tests', belongTo: ['university'], isPriority: true, isDone: false, lastDay: (new Date().getTime() + 1000 * 60 * 60 * 24 * 3) },\r\n        { _id: utilService.generateId(), task: 'Doing Homework', belongTo: ['university'], isPriority: true, isDone: true, lastDay: (new Date().getTime()) },\r\n    ]\r\n    utilService.saveToSession('todos', gTodos)\r\n}\r\n\r\nasync function removeTodo(id) {\r\n    var idx = gTodos.findIndex((todo) => {\r\n        console.log(todo._id, id)\r\n        return todo._id === id\r\n    });\r\n\r\n    gTodos.splice(idx, 1);\r\n    utilService.saveToSession('todos', gTodos);\r\n    return;\r\n}\r\n\r\nasync function addTodo(todo) {\r\n    todo._id = utilService.generateId();\r\n    gTodos.push(todo);\r\n    utilService.saveToSession('todos', gTodos);\r\n    return todo;\r\n}\r\n\r\nasync function query() {\r\n    return gTodos\r\n}\r\n\r\nasync function getTodoById(id) {\r\n    var todo = gTodos.find((todo) => { return todo._id === id })\r\n    return todo;\r\n}\r\n\r\nasync function updateTodo(updatedTodo) {\r\n    var idx = gTodos.findIndex((todo) => {\r\n        return updatedTodo._id === todo._id;\r\n    })\r\n    gTodos.splice(idx, 1, updatedTodo);\r\n    utilService.saveToSession('todos', gTodos)\r\n    return updatedTodo;\r\n}\r\n\r\nexport default {\r\n    query,\r\n    getTodoById,\r\n    removeTodo,\r\n    addTodo,\r\n    updateTodo\r\n}","import todoService from '../services/todoService';\r\n\r\nexport const loadTodos = () => {\r\n    return async (dispatch) => {\r\n        const todos = await todoService.query();\r\n        return dispatch({ type: 'LOAD_TODOS', todos })\r\n    }\r\n}\r\n\r\nexport const changeFilter = (filter) => {\r\n    return async (dispatch) => {\r\n        return dispatch({ type: 'CHANGE_FILTER', filter })\r\n    }\r\n}\r\n\r\nexport const updateTodo = (todo) => {\r\n    return async (dispatch) => {\r\n        const updatedTodo = await todoService.updateTodo(todo);\r\n        return dispatch({ type: 'UPDATE_TODO', updatedTodo })\r\n    }\r\n}\r\n\r\nexport const removeTodo = (id) => {\r\n    return async (dispatch) => {\r\n        await todoService.removeTodo(id);\r\n        return dispatch({ type: 'REMOVE_TODO', id })\r\n    }\r\n}\r\n\r\nexport const addTodo = (todo) => {\r\n    return async (dispatch) => {\r\n        const newTodo = await todoService.addTodo(todo);\r\n        return dispatch({ type: 'ADD_TODO', newTodo })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { changeFilter } from '../actions/todosAction';\r\nimport { connect } from 'react-redux'\r\n\r\nclass TaskFilter extends Component {\r\n\r\n    setFilter = async (filter) => {\r\n        await this.props.changeFilter(filter);\r\n    }\r\n\r\n    render() {\r\n        const filters = ['All', 'Completed', 'Priority', 'Today'];\r\n        const elFilters = filters.map((filter, idx) => {\r\n            return (<div className=\"filter\" key={filter} onClick={(ev) => {this.setFilter(filter)}}>\r\n                {filter}\r\n            </div>)\r\n        })\r\n\r\n        return (\r\n            <section className=\"filters-container flex row center space-evenly\">\r\n                {elFilters}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{ \r\n        filterBy:state.todo.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    changeFilter\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskFilter)","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleNotch, faCheckCircle, faCalendarDay, faEdit, faTrashAlt, faStar, faMagic } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport { updateTodo,removeTodo } from '../actions/todosAction'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass TodoPreview extends Component {\r\n    state = {\r\n        isTodoTabOpen: false\r\n    }\r\n\r\n    handleTodoClick = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                isTodoTabOpen: (!prevState.isTodoTabOpen)\r\n            }\r\n        })\r\n    }\r\n\r\n    removeTodo = async (ev,id) => {\r\n        ev.stopPropagation();\r\n        await this.props.removeTodo(id);\r\n    }\r\n\r\n    editTodo = async (ev,id) => {\r\n        this.props.history.push('/todos/todo/edit/' + id);\r\n    }\r\n\r\n    changeTodo = async (ev,todo,property) => {\r\n        ev.stopPropagation();\r\n        var newTodo = Object.assign({},todo)\r\n        newTodo[property] = !newTodo[property]\r\n        await this.props.updateTodo(newTodo);\r\n    }\r\n    render() {\r\n        const { todo } = this.props;\r\n        const elMark = (todo.isDone) ?\r\n            (<FontAwesomeIcon onClick={(ev) => {this.changeTodo(ev,todo,'isDone')}} className=\"todo-check-icon\" icon={faCheckCircle} />) :\r\n            (<FontAwesomeIcon onClick={(ev) => {this.changeTodo(ev,todo,'isDone')}} className=\"todo-check-icon\" icon={faCircleNotch} />)\r\n        const [, month, day, year] = new Date(todo.lastDay).toDateString().split(' ')\r\n\r\n        const open = (this.state.isTodoTabOpen) ? 'open' : null;\r\n        const priority = (todo.isPriority)? 'priority': null;\r\n        const elTodo = (<div onClick={this.handleTodoClick}>\r\n            <div className=\"todo-container-basic todo-container-open flex column justify-start align-start\">\r\n                <div className=\"todo-basic flex row center justify-start\">\r\n                    {elMark}\r\n                    <div className=\"todo-info center align-start\">\r\n                        <div className=\"todo-title-main\">{todo.task}</div>\r\n                        <div className={`todo-title-second ${open}`}>\r\n                            {todo.belongTo[0]}\r\n                        </div>\r\n                        <div className={`todo-last-day flex row center justify-start ${open}`}>\r\n                            <FontAwesomeIcon icon={faCalendarDay} />\r\n                            <span>\r\n                                {month} {day} , {year}\r\n                            </span>\r\n                        </div>\r\n                        <div className={`todo-container-more flex row center space-between ${open}`}>\r\n                            <FontAwesomeIcon className=\"more-icon recycle\" icon={faMagic} />\r\n                            <FontAwesomeIcon onClick={(ev) => {this.changeTodo(ev,todo,'isPriority')}} className={`more-icon star ${priority}`} icon={faStar} />\r\n                            <FontAwesomeIcon onClick={(ev) => {this.editTodo(ev,todo._id)}} className=\"more-icon edit\" icon={faEdit} />\r\n                            <FontAwesomeIcon onClick={(ev) => {this.removeTodo(ev,todo._id)}} className=\"more-icon remove\" icon={faTrashAlt} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n\r\n        return (\r\n            <div key={todo._id}>\r\n                {elTodo}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos:state.todo.todos\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    updateTodo,\r\n    removeTodo\r\n}\r\n\r\nexport default  withRouter(connect(mapStateToProps,mapDispatchToProps)(TodoPreview))","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TodoPreview from '../cmps/TodoPreview';\r\n\r\nclass TodosList extends Component {\r\n\r\n    filterTodos = (todos, filterBy) => {\r\n        switch (filterBy) {\r\n            case ('Completed'):\r\n                return todos.filter((todo) => { return todo.isDone });\r\n            case ('Priority'):\r\n                return todos.filter((todo) => { return todo.isPriority })\r\n            case ('Today'):\r\n                return todos.filter((todo) => {\r\n                    var today = new Date();\r\n                    var dateTime = new Date(todo.lastDay)\r\n                    const [,month,day,year] = dateTime.toDateString().split(' ');\r\n                    const [,todayMonth,todayDay,todayYear] = today.toDateString().split(' ');\r\n                    if(month === todayMonth && day === todayDay && year === todayYear) return true;\r\n                    return false;\r\n                })\r\n            default:\r\n                return todos;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { todos, filterBy, folder } = this.props;\r\n        console.log(folder)\r\n        var folderTodos = todos.filter((todo) => {return todo.belongTo[0].toLowerCase() === folder.name.toLowerCase()})\r\n        if(folder.name.toLowerCase() === 'all schedule') folderTodos = todos;\r\n        \r\n        const filterdTodos = this.filterTodos(folderTodos, filterBy);\r\n        const elTodoList = filterdTodos.map((todo,idx) => {\r\n            return (\r\n                <TodoPreview todo={todo} key={idx} />\r\n            )\r\n        })\r\n\r\n        return (<section>\r\n            {elTodoList}\r\n        </section>)\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todo.todos,\r\n        filterBy: state.todo.filterBy,\r\n        folder: state.folder.currFolder\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TodosList);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faArrowLeft, faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport TaskFilter from '../cmps/TaskFilter';\r\nimport TodoList from '../cmps/TodosList';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Todos extends Component {\r\n    \r\n    render() {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const date = new Date();\r\n        const [, shortMonth, day, year] = date.toDateString().split(' ');\r\n        const month = monthNames.find(monthName => { return monthName.startsWith(shortMonth) });\r\n        const { currFolder } = this.props;\r\n        const elCurr = (currFolder) ?\r\n            (<div className=\"todos-header flex row center space-between\">\r\n                <FontAwesomeIcon icon={faArrowLeft} onClick={this.props.history.goBack} />\r\n                <div className=\"todos-header-title flex column center space-between\">\r\n                    <span>{currFolder.name}</span>\r\n                    <span>{month} {day} {year}</span>\r\n                </div>\r\n                <FontAwesomeIcon icon={faBars} />\r\n            </div>) :\r\n\r\n            (<div className=\"todos-header\">Folder Doesnt Exicst</div>)\r\n\r\n        return (\r\n            <section className=\"todo-section-container\">\r\n                {elCurr}\r\n                <TaskFilter />\r\n                <TodoList />\r\n                <Link className=\"add flex column center\" to=\"todo/edit/\">\r\n                    <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>\r\n                </Link>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const currFolder = state.folder.currFolder\r\n    return {\r\n        currFolder\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Todos)\r\n","import React, { Component } from 'react';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n    KeyboardDatePicker,\r\n    MuiPickersUtilsProvider\r\n} from '@material-ui/pickers';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from 'react-redux'\r\nimport { addTodo, updateTodo } from '../actions/todosAction';\r\nimport { withRouter } from 'react-router-dom';\r\nimport utilService from '../services/utilService'\r\n\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        todo: {\r\n            task: '',\r\n            belongTo: [],\r\n            isPriority: false,\r\n            isDone: false,\r\n            lastDay: new Date()\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const currFolder = await this.props.currFolder;\r\n        this.setState((prevState) => {\r\n            return {\r\n                todo: {\r\n                    ...prevState.todo,\r\n                    belongTo: [currFolder.name]\r\n                }\r\n            }\r\n        })\r\n        const { id } = this.props;\r\n        if (id) {\r\n            var todos = await this.props.todos;\r\n            if(!todos.length) todos = utilService.loadFromSession('todos');\r\n            const todo = todos.find((todo) => { \r\n                return todo._id === id });\r\n            this.setState((prevState) => {\r\n                return {\r\n                    todo\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleInputChange = (ev, field) => {\r\n        ev.persist();\r\n        const { value } = ev.target;\r\n        var val = (field.toLowerCase() === 'belongto') ? [value] : value;\r\n        if (typeof val === 'string' && val.toLowerCase() === \"true\") val = !true;\r\n        if (typeof val === 'string' && val.toLowerCase() === \"false\") val = !false;\r\n        this.setState((prevState) => {\r\n            return {\r\n                todo: {\r\n                    ...prevState.todo,\r\n                    [field]: val\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handleInputChangeLastDay = (date) => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                todo: {\r\n                    ...prevState.todo,\r\n                    lastDay: new Date(date)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    sendForm = async (field) => {\r\n        const { folders } = this.props;\r\n        const { todo } = this.state;\r\n\r\n        const res = folders.find((folder) => {\r\n            return folder.name.toLowerCase() === todo.belongTo[0].toLowerCase();\r\n        })\r\n        if (res && todo.task) {\r\n            todo.belongTo[0] = todo.belongTo[0].toLowerCase();\r\n            await this.props[field](todo)\r\n            console.log('Form Sent')\r\n            this.props.history.push('/todos/' + this.props.currFolder._id)\r\n        } else console.log('Folder Name Doesnt Exist Or Task Doesnt Exist')\r\n    }\r\n\r\n\r\n    useStyles = () => {\r\n        makeStyles((theme) => ({\r\n            root: {\r\n                '&': {\r\n                    width: '100%',\r\n                },\r\n            },\r\n        }))\r\n    };\r\n\r\n    render() {\r\n        const classes = this.useStyles();\r\n\r\n        const { todo } = this.state;\r\n        const isDone = (todo.isDone) ? true : false;\r\n        const isPriority = (todo.isPriority) ? true : false;\r\n\r\n        const { id } = this.props;\r\n        const elBtn = (id) ?\r\n            (<input className=\"btn-form\" value=\"Edit Todo\" type=\"button\" onClick={() => {this.sendForm('updateTodo')}} />) :\r\n            (<input className=\"btn-form\" value=\"Add Todo\" type=\"button\" onClick={ () => {this.sendForm('addTodo')}} />);\r\n\r\n\r\n        return (\r\n            <form className=\"form flex column justify-start\">\r\n                <TextField onChange={(ev) => { this.handleInputChange(ev, 'belongTo') }}\r\n                    value={todo.belongTo} className={classes} id=\"standard-basic\" label=\"Folder Name\" />\r\n                <TextField onChange={(ev) => { this.handleInputChange(ev, 'task') }}\r\n                    value={todo.task} className={classes} id=\"standard-basic\" label=\"Your Task\" />\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n\r\n                        <KeyboardDatePicker\r\n                            className=\"date-picker\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-dialog\"\r\n                            label=\"Date picker dialog\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            value={todo.lastDay}\r\n                            onChange={(date) => { this.handleInputChangeLastDay(date) }}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n                <div className=\"checkbox\">\r\n                    <label htmlFor=\"priority\">Priority</label>\r\n                    <input onChange={(ev) => { this.handleInputChange(ev, 'isPriority') }}\r\n                        value={todo.isPriority} id=\"priority\" type=\"checkbox\" checked={isPriority} />\r\n                </div>\r\n                <div className=\"checkbox\">\r\n                    <label htmlFor=\"completed\">Completed</label>\r\n                    <input onChange={(ev) => { this.handleInputChange(ev, 'isDone') }}\r\n                        value={todo.isDone} id=\"completed\" type=\"checkbox\" checked={isDone} />\r\n                </div>\r\n\r\n                {elBtn}\r\n                \r\n            </form>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currFolder: state.folder.currFolder,\r\n        folders: state.folder.folders,\r\n        todos: state.todo.todos\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addTodo,\r\n    updateTodo\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Form))","import React, { Component } from 'react';\r\nimport Form from '../cmps/Form';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class TodoEdit extends Component {\r\n    render() {\r\n        const { id } = this.props.match.params;\r\n        const elSpanTitle = (id) ? <span>Edit Task Section</span> : <span>Create New Task</span>\r\n\r\n        return (\r\n            <section className=\"todo-edit-container\">\r\n                <div className=\"todos-header todo-edit flex row center space-between\">\r\n                    <FontAwesomeIcon icon={faArrowLeft} onClick={this.props.history.goBack} />\r\n                    <div className=\"todos-header-title flex column center space-between\">\r\n                        {elSpanTitle}\r\n                    </div>\r\n                    {/* Bars */}\r\n                    <div></div>\r\n                </div>\r\n                <div className=\"todo-edit-main flex column\">\r\n                    <Form id={id}/>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport {Switch, Route} from 'react-router-dom'\nimport Homepage from './views/Homepage';\nimport Todos from './views/Todos';\nimport TodoEdit from './views/TodoEdit';\nimport { connect } from 'react-redux'\nimport { loadFolders } from './actions/folderAction'\nimport { loadTodos } from './actions/todosAction'\n\n\n\nclass App extends Component {\n  async componentDidMount() {\n    await this.props.loadFolders();\n    await this.props.loadTodos();\n\n}\n  render(){\n    return (\n      <section className=\"App container\">\n        <Switch>\n          <Route exact path=\"/\" component={Homepage}></Route>\n          <Route exact path=\"/todos/:folderId\" component={Todos}></Route>\n          <Route exact path=\"/todos/todo/edit/:id?\" component={TodoEdit}></Route>\n        </Switch>\n      </section> \n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    folders:state.folder.folders\n  }\n}\n\nconst mapDispatchToProps = {\n  loadFolders,\n  loadTodos\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App)\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst INITIAL_STATE = {\r\n    todos: [],\r\n    filterBy: 'All',\r\n}\r\n\r\nexport default function todosReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'LOAD_TODOS':\r\n            return {\r\n                ...state,\r\n                todos: action.todos\r\n            }\r\n        case 'CHANGE_FILTER':\r\n            console.log(action.filter)\r\n\r\n            return {\r\n                ...state,\r\n                filterBy: action.filter\r\n            }\r\n        case 'UPDATE_TODO':\r\n            let idx = state.todos.findIndex((todo) => {\r\n                return todo._id === action.updatedTodo._id\r\n            })\r\n            return {\r\n                ...state,\r\n                todos: [\r\n                    ...state.todos.slice(0, idx),\r\n                    action.updatedTodo,\r\n                    ...state.todos.slice(idx + 1)\r\n                ]\r\n            }\r\n        case 'REMOVE_TODO':\r\n            let removeIdx = state.todos.findIndex((todo) => {\r\n                return todo._id === action.id\r\n            })\r\n            var removeTodos = (removeIdx === -1)? [...state.todos] : [\r\n                ...state.todos.slice(0, removeIdx),\r\n                ...state.todos.slice(removeIdx + 1)\r\n            ]\r\n            return {\r\n                ...state,\r\n                todos:removeTodos\r\n            }\r\n        case 'ADD_TODO':\r\n            //Check .... !\r\n            var res = state.todos.findIndex((todo) => { return todo._id === action.newTodo._id });\r\n            var todos = (res !== -1) ? [...state.todos] : [...state.todos, action.newTodo];\r\n            return {\r\n                ...state,\r\n                todos\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import utilService from '../services/utilService'\r\n\r\n// var localFolders = []\r\n// if (sessionStorage.folders) localFolders = utilService.loadFromSession('folders');\r\n\r\nvar localCurrFolder = null;\r\nif (sessionStorage.currFolder) localCurrFolder = utilService.loadFromSession('currFolder')\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    folders: [],\r\n    currFolder: localCurrFolder\r\n}\r\n\r\n\r\nexport default function foldersReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_FOLDERS':\r\n            return {\r\n                ...state,\r\n                folders: action.folders\r\n            }\r\n        case 'SET_CURR_FOLDER':\r\n\r\n            return {\r\n                ...state,\r\n                currFolder: action.folder\r\n            }\r\n        case 'ADD_FOLDER':\r\n            //Check .... !\r\n            var res = state.folders.findIndex((folder) => { return folder._id === action.addedFolder._id });\r\n            var folders = (res !== -1) ? [...state.folders] : [...state.folders, action.addedFolder];\r\n            return {\r\n                ...state,\r\n                folders\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore , combineReducers , applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport todosReducer from './reducers/todosReducer';\r\nimport foldersReducer from './reducers/folderReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    todo:todosReducer,\r\n    folder:foldersReducer\r\n})\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nexport default store;","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = ({ children, location: { pathname } }) => {\r\n    useEffect(() => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [pathname]);\r\n\r\n    return children || null;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport ScrollToTop from './cmps/ScrollToTop';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history}>\n        <ScrollToTop>\n          <App />\n        </ScrollToTop>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}